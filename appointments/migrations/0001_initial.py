# Generated by Django 4.2.16 on 2025-07-29 05:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(verbose_name='Fecha y hora de inicio')),
                ('end_datetime', models.DateTimeField(verbose_name='Fecha y hora de fin')),
                ('status', models.CharField(choices=[('scheduled', 'Programada'), ('confirmed', 'Confirmada'), ('in_progress', 'En progreso'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('no_show', 'No se presentó'), ('rescheduled', 'Reprogramada')], default='scheduled', max_length=20, verbose_name='Estado')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=10, verbose_name='Prioridad')),
                ('reason', models.TextField(verbose_name='Motivo de la consulta')),
                ('notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('private_notes', models.TextField(blank=True, verbose_name='Notas privadas (solo personal médico)')),
                ('patient_phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono del paciente')),
                ('patient_email', models.EmailField(blank=True, max_length=254, verbose_name='Email del paciente')),
                ('reminder_sent', models.BooleanField(default=False, verbose_name='Recordatorio enviado')),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Recordatorio enviado el')),
                ('amount_charged', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Monto cobrado')),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia'), ('insurance', 'Seguro'), ('other', 'Otro')], max_length=20, verbose_name='Método de pago')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('duration_minutes', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(480)], verbose_name='Duración (minutos)')),
                ('color', models.CharField(default='#007bff', help_text='Color en formato hexadecimal', max_length=7, verbose_name='Color')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Precio')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_types', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Tipo de Cita',
                'verbose_name_plural': 'Tipos de Cita',
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='AppointmentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la plantilla')),
                ('recurrence_type', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('biweekly', 'Quincenal'), ('monthly', 'Mensual'), ('custom', 'Personalizado')], max_length=20, verbose_name='Tipo de recurrencia')),
                ('recurrence_interval', models.IntegerField(default=1, verbose_name='Intervalo de recurrencia')),
                ('start_time', models.TimeField(verbose_name='Hora de inicio')),
                ('duration_minutes', models.IntegerField(verbose_name='Duración (minutos)')),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('start_date', models.DateField(verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.appointmenttype')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_templates', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_templates', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Plantilla de Cita',
                'verbose_name_plural': 'Plantillas de Cita',
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('call', 'Llamada telefónica'), ('whatsapp', 'WhatsApp')], max_length=20, verbose_name='Tipo de recordatorio')),
                ('send_datetime', models.DateTimeField(verbose_name='Fecha y hora de envío')),
                ('hours_before', models.IntegerField(verbose_name='Horas antes de la cita')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('delivered', 'Entregado'), ('failed', 'Falló')], default='pending', max_length=20, verbose_name='Estado')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviado el')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'verbose_name': 'Recordatorio de Cita',
                'verbose_name_plural': 'Recordatorios de Cita',
                'ordering': ['send_datetime'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_complaint', models.TextField(verbose_name='Motivo de consulta')),
                ('present_illness_history', models.TextField(blank=True, verbose_name='Historia de enfermedad actual')),
                ('physical_examination', models.TextField(blank=True, verbose_name='Exploración física')),
                ('assessment', models.TextField(blank=True, verbose_name='Evaluación')),
                ('diagnosis', models.TextField(blank=True, verbose_name='Diagnóstico')),
                ('differential_diagnosis', models.TextField(blank=True, verbose_name='Diagnóstico diferencial')),
                ('treatment_plan', models.TextField(blank=True, verbose_name='Plan de tratamiento')),
                ('medications', models.TextField(blank=True, verbose_name='Medicamentos')),
                ('recommendations', models.TextField(blank=True, verbose_name='Recomendaciones')),
                ('follow_up_needed', models.BooleanField(default=False, verbose_name='Requiere seguimiento')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Fecha de seguimiento')),
                ('referral_needed', models.BooleanField(default=False, verbose_name='Requiere referencia')),
                ('referral_to', models.CharField(blank=True, max_length=200, verbose_name='Referir a')),
                ('additional_notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_note', to='appointments.appointment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nota de Consulta',
                'verbose_name_plural': 'Notas de Consulta',
            },
        ),
        migrations.CreateModel(
            name='AppointmentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_type', models.CharField(choices=[('vacation', 'Vacaciones'), ('sick_leave', 'Incapacidad'), ('conference', 'Conferencia'), ('surgery', 'Cirugía'), ('emergency', 'Emergencia'), ('personal', 'Personal'), ('other', 'Otro')], max_length=20, verbose_name='Tipo de bloqueo')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('start_datetime', models.DateTimeField(verbose_name='Fecha y hora de inicio')),
                ('end_datetime', models.DateTimeField(verbose_name='Fecha y hora de fin')),
                ('all_day', models.BooleanField(default=False, verbose_name='Todo el día')),
                ('recurring', models.BooleanField(default=False, verbose_name='Recurrente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_blocks', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_blocks', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_blocks', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Bloqueo de Citas',
                'verbose_name_plural': 'Bloqueos de Citas',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='appointment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='appointments.appointmenttype'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(limit_choices_to={'role': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='accounts.organization'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patient'),
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='Día de la semana')),
                ('start_time', models.TimeField(verbose_name='Hora de inicio')),
                ('end_time', models.TimeField(verbose_name='Hora de fin')),
                ('break_start', models.TimeField(blank=True, null=True, verbose_name='Inicio de descanso')),
                ('break_end', models.TimeField(blank=True, null=True, verbose_name='Fin de descanso')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(limit_choices_to={'role': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_schedules', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Horario del Médico',
                'verbose_name_plural': 'Horarios de los Médicos',
                'unique_together': {('doctor', 'day_of_week', 'start_time')},
            },
        ),
    ]
