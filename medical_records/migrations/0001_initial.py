# Generated by Django 4.2.16 on 2025-07-29 06:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
        ('appointments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Consulta')),
                ('consultation_type', models.CharField(choices=[('routine', 'Consulta de Rutina'), ('follow_up', 'Seguimiento'), ('emergency', 'Emergencia'), ('specialist', 'Especialista'), ('second_opinion', 'Segunda Opinión')], default='routine', max_length=50, verbose_name='Tipo de Consulta')),
                ('chief_complaint', models.TextField(verbose_name='Motivo de Consulta')),
                ('history_present_illness', models.TextField(blank=True, verbose_name='Historia de Enfermedad Actual')),
                ('vital_signs_notes', models.TextField(blank=True, verbose_name='Signos Vitales')),
                ('physical_examination', models.TextField(blank=True, verbose_name='Exploración Física')),
                ('assessment', models.TextField(blank=True, verbose_name='Evaluación')),
                ('diagnosis_primary', models.TextField(blank=True, verbose_name='Diagnóstico Principal')),
                ('diagnosis_secondary', models.TextField(blank=True, verbose_name='Diagnósticos Secundarios')),
                ('treatment_plan', models.TextField(blank=True, verbose_name='Plan de Tratamiento')),
                ('medications_prescribed', models.TextField(blank=True, verbose_name='Medicamentos Prescritos')),
                ('procedures_performed', models.TextField(blank=True, verbose_name='Procedimientos Realizados')),
                ('follow_up_instructions', models.TextField(blank=True, verbose_name='Instrucciones de Seguimiento')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Seguimiento')),
                ('referral_to', models.CharField(blank=True, max_length=200, verbose_name='Referido a')),
                ('doctor_notes', models.TextField(blank=True, verbose_name='Notas del Médico')),
                ('patient_education', models.TextField(blank=True, verbose_name='Educación del Paciente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultation', to='appointments.appointment')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='accounts.organization')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Consulta Médica',
                'verbose_name_plural': 'Consultas Médicas',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperatura (°C)')),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, verbose_name='Presión Sistólica')),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, verbose_name='Presión Diastólica')),
                ('heart_rate', models.IntegerField(blank=True, null=True, verbose_name='Frecuencia Cardíaca')),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, verbose_name='Frecuencia Respiratoria')),
                ('oxygen_saturation', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(100)], verbose_name='Saturación de Oxígeno (%)')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Altura (cm)')),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='IMC')),
                ('glucose_level', models.IntegerField(blank=True, null=True, verbose_name='Nivel de Glucosa (mg/dL)')),
                ('pain_scale', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Escala de Dolor (0-10)')),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Registro')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='medical_records.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_vital_signs', to='patients.patient')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_vital_signs_recorded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Signos Vitales',
                'verbose_name_plural': 'Signos Vitales',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=200, verbose_name='Nombre del Medicamento')),
                ('generic_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre Genérico')),
                ('dosage', models.CharField(max_length=100, verbose_name='Dosis')),
                ('frequency', models.CharField(max_length=100, verbose_name='Frecuencia')),
                ('route', models.CharField(choices=[('oral', 'Oral'), ('topical', 'Tópico'), ('injection', 'Inyección'), ('inhalation', 'Inhalación'), ('other', 'Otro')], default='oral', max_length=50, verbose_name='Vía de Administración')),
                ('duration', models.CharField(max_length=100, verbose_name='Duración del Tratamiento')),
                ('quantity', models.CharField(blank=True, max_length=100, verbose_name='Cantidad')),
                ('refills', models.IntegerField(default=0, verbose_name='Reposiciones')),
                ('instructions', models.TextField(verbose_name='Instrucciones')),
                ('special_instructions', models.TextField(blank=True, verbose_name='Instrucciones Especiales')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('completed', 'Completado'), ('discontinued', 'Discontinuado'), ('on_hold', 'En Espera')], default='active', max_length=20, verbose_name='Estado')),
                ('prescribed_date', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Prescripción')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='medical_records.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='patients.patient')),
                ('prescribed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescripción',
                'verbose_name_plural': 'Prescripciones',
                'ordering': ['-prescribed_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_type', models.CharField(blank=True, max_length=10, verbose_name='Tipo de Sangre')),
                ('allergies', models.TextField(blank=True, verbose_name='Alergias')),
                ('chronic_conditions', models.TextField(blank=True, verbose_name='Condiciones Crónicas')),
                ('current_medications', models.TextField(blank=True, verbose_name='Medicamentos Actuales')),
                ('family_history', models.TextField(blank=True, verbose_name='Antecedentes Familiares')),
                ('smoking_status', models.CharField(choices=[('never', 'Nunca ha fumado'), ('former', 'Ex fumador'), ('current', 'Fumador actual'), ('occasional', 'Fumador ocasional')], default='never', max_length=20, verbose_name='Estado de Fumador')),
                ('alcohol_consumption', models.CharField(choices=[('none', 'No consume'), ('occasional', 'Ocasional'), ('moderate', 'Moderado'), ('heavy', 'Excesivo')], default='none', max_length=20, verbose_name='Consumo de Alcohol')),
                ('exercise_frequency', models.CharField(choices=[('none', 'Sedentario'), ('light', 'Ejercicio ligero'), ('moderate', 'Ejercicio moderado'), ('intense', 'Ejercicio intenso')], default='none', max_length=20, verbose_name='Frecuencia de Ejercicio')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Contacto de Emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono de Emergencia')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=100, verbose_name='Relación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_medical_records', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='accounts.organization')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_record', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Expediente Médico',
                'verbose_name_plural': 'Expedientes Médicos',
            },
        ),
        migrations.CreateModel(
            name='MedicalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('document_type', models.CharField(choices=[('lab_result', 'Resultado de Laboratorio'), ('imaging', 'Estudio de Imagen'), ('prescription', 'Receta'), ('report', 'Reporte Médico'), ('referral', 'Referencia'), ('consent', 'Consentimiento'), ('insurance', 'Seguro'), ('other', 'Otro')], default='other', max_length=50, verbose_name='Tipo de Documento')),
                ('file', models.FileField(upload_to='medical_documents/%Y/%m/', verbose_name='Archivo')),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('is_confidential', models.BooleanField(default=True, verbose_name='Confidencial')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='medical_records.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_documents', to='patients.patient')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento Médico',
                'verbose_name_plural': 'Documentos Médicos',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('allergy', 'Alergia'), ('drug_interaction', 'Interacción de Medicamentos'), ('medical_condition', 'Condición Médica'), ('behavioral', 'Conductual'), ('administrative', 'Administrativa'), ('other', 'Otra')], max_length=50, verbose_name='Tipo de Alerta')),
                ('severity', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=20, verbose_name='Severidad')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expira el')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_alerts', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Alerta Médica',
                'verbose_name_plural': 'Alertas Médicas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=200, verbose_name='Nombre del Examen')),
                ('test_code', models.CharField(blank=True, max_length=50, verbose_name='Código del Examen')),
                ('test_category', models.CharField(choices=[('hematology', 'Hematología'), ('chemistry', 'Química Sanguínea'), ('immunology', 'Inmunología'), ('microbiology', 'Microbiología'), ('pathology', 'Patología'), ('radiology', 'Radiología'), ('cardiology', 'Cardiología'), ('other', 'Otro')], default='chemistry', max_length=100, verbose_name='Categoría')),
                ('result_value', models.CharField(max_length=500, verbose_name='Resultado')),
                ('reference_range', models.CharField(blank=True, max_length=200, verbose_name='Rango de Referencia')),
                ('units', models.CharField(blank=True, max_length=50, verbose_name='Unidades')),
                ('status', models.CharField(choices=[('normal', 'Normal'), ('abnormal', 'Anormal'), ('critical', 'Crítico'), ('pending', 'Pendiente')], default='pending', max_length=20, verbose_name='Estado')),
                ('ordered_date', models.DateField(verbose_name='Fecha de Orden')),
                ('result_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Resultado')),
                ('laboratory_name', models.CharField(blank=True, max_length=200, verbose_name='Laboratorio')),
                ('technician_notes', models.TextField(blank=True, verbose_name='Notas del Técnico')),
                ('doctor_interpretation', models.TextField(blank=True, verbose_name='Interpretación Médica')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='medical_records.consultation')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Resultado de Laboratorio',
                'verbose_name_plural': 'Resultados de Laboratorio',
                'ordering': ['-ordered_date'],
            },
        ),
    ]
