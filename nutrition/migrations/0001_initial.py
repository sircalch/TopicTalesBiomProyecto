# Generated by Django 4.2.16 on 2025-07-29 20:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DietPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del Plan')),
                ('plan_type', models.CharField(choices=[('weight_loss', 'Pérdida de Peso'), ('weight_gain', 'Ganancia de Peso'), ('maintenance', 'Mantenimiento'), ('muscle_gain', 'Ganancia Muscular'), ('diabetic', 'Diabético'), ('hypertensive', 'Hipertensivo'), ('low_sodium', 'Bajo en Sodio'), ('vegetarian', 'Vegetariano'), ('vegan', 'Vegano'), ('mediterranean', 'Mediterránea'), ('keto', 'Cetogénica')], max_length=20, verbose_name='Tipo de Plan')),
                ('target_calories', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Calorías Objetivo')),
                ('protein_grams', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Proteínas (g)')),
                ('carbs_grams', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Carbohidratos (g)')),
                ('fat_grams', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Grasas (g)')),
                ('fiber_grams', models.DecimalField(decimal_places=2, default=25, max_digits=5, verbose_name='Fibra (g)')),
                ('breakfast_calories', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Desayuno (kcal)')),
                ('morning_snack_calories', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Colación Matutina (kcal)')),
                ('lunch_calories', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Comida (kcal)')),
                ('afternoon_snack_calories', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Colación Vespertina (kcal)')),
                ('dinner_calories', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cena (kcal)')),
                ('instructions', models.TextField(verbose_name='Instrucciones Generales')),
                ('foods_to_avoid', models.TextField(blank=True, verbose_name='Alimentos a Evitar')),
                ('recommended_foods', models.TextField(blank=True, verbose_name='Alimentos Recomendados')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Plan Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plan Dietético',
                'verbose_name_plural': 'Planes Dietéticos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NutritionalAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Peso (kg)')),
                ('height', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Altura (cm)')),
                ('waist_circumference', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Circunferencia de Cintura (cm)')),
                ('hip_circumference', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Circunferencia de Cadera (cm)')),
                ('body_fat_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Porcentaje de Grasa Corporal')),
                ('muscle_mass', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Masa Muscular (kg)')),
                ('bmi', models.DecimalField(decimal_places=2, editable=False, max_digits=5, verbose_name='IMC')),
                ('bmr', models.DecimalField(decimal_places=2, editable=False, max_digits=6, verbose_name='Metabolismo Basal (kcal)')),
                ('daily_calories', models.DecimalField(decimal_places=2, editable=False, max_digits=6, verbose_name='Calorías Diarias Recomendadas')),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentario'), ('light', 'Actividad Ligera'), ('moderate', 'Actividad Moderada'), ('active', 'Actividad Intensa'), ('very_active', 'Muy Activo')], max_length=20, verbose_name='Nivel de Actividad')),
                ('objective', models.CharField(choices=[('maintain', 'Mantener Peso'), ('lose', 'Perder Peso'), ('gain', 'Ganar Peso'), ('muscle', 'Ganar Músculo'), ('health', 'Mejorar Salud')], max_length=20, verbose_name='Objetivo Nutricional')),
                ('allergies', models.TextField(blank=True, verbose_name='Alergias Alimentarias')),
                ('food_intolerances', models.TextField(blank=True, verbose_name='Intolerancias Alimentarias')),
                ('chronic_diseases', models.TextField(blank=True, verbose_name='Enfermedades Crónicas')),
                ('medications', models.TextField(blank=True, verbose_name='Medicamentos Actuales')),
                ('meals_per_day', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Comidas por Día')),
                ('water_intake', models.DecimalField(decimal_places=1, default=2.0, max_digits=3, verbose_name='Consumo de Agua (litros/día)')),
                ('alcohol_consumption', models.CharField(blank=True, max_length=100, verbose_name='Consumo de Alcohol')),
                ('supplements', models.TextField(blank=True, verbose_name='Suplementos')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('recommendations', models.TextField(blank=True, verbose_name='Recomendaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nutritionist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_assessments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutritional_assessments', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Evaluación Nutricional',
                'verbose_name_plural': 'Evaluaciones Nutricionales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NutritionGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('weight', 'Meta de Peso'), ('bmi', 'Meta de IMC'), ('body_fat', 'Meta de Grasa Corporal'), ('muscle_mass', 'Meta de Masa Muscular'), ('waist', 'Meta de Circunferencia de Cintura'), ('habit', 'Cambio de Hábito'), ('nutrition', 'Meta Nutricional')], max_length=20, verbose_name='Tipo de Meta')),
                ('title', models.CharField(max_length=200, verbose_name='Título de la Meta')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Valor Objetivo')),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Valor Actual')),
                ('unit', models.CharField(blank=True, max_length=50, verbose_name='Unidad')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('target_date', models.DateField(verbose_name='Fecha Objetivo')),
                ('achieved_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Logro')),
                ('status', models.CharField(choices=[('active', 'Activa'), ('achieved', 'Lograda'), ('paused', 'Pausada'), ('cancelled', 'Cancelada')], default='active', max_length=20, verbose_name='Estado')),
                ('priority', models.IntegerField(choices=[(1, 'Baja'), (2, 'Media'), (3, 'Alta'), (4, 'Crítica')], default=2, verbose_name='Prioridad')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nutritionist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_nutrition_goals', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_goals', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Meta Nutricional',
                'verbose_name_plural': 'Metas Nutricionales',
                'ordering': ['-priority', 'target_date'],
            },
        ),
        migrations.CreateModel(
            name='NutritionConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateTimeField(verbose_name='Fecha de Consulta')),
                ('consultation_type', models.CharField(choices=[('initial', 'Consulta Inicial'), ('followup', 'Seguimiento'), ('adjustment', 'Ajuste de Plan'), ('emergency', 'Consulta de Emergencia')], default='followup', max_length=50, verbose_name='Tipo de Consulta')),
                ('current_weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Peso Actual (kg)')),
                ('weight_change', models.DecimalField(decimal_places=2, editable=False, max_digits=5, verbose_name='Cambio de Peso (kg)')),
                ('diet_adherence', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Adherencia a la Dieta (%)')),
                ('exercise_adherence', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Adherencia al Ejercicio (%)')),
                ('patient_satisfaction', models.IntegerField(choices=[(1, 'Muy Insatisfecho'), (2, 'Insatisfecho'), (3, 'Neutral'), (4, 'Satisfecho'), (5, 'Muy Satisfecho')], default=3, verbose_name='Satisfacción del Paciente')),
                ('energy_level', models.IntegerField(choices=[(1, 'Muy Bajo'), (2, 'Bajo'), (3, 'Normal'), (4, 'Alto'), (5, 'Muy Alto')], default=3, verbose_name='Nivel de Energía')),
                ('patient_concerns', models.TextField(blank=True, verbose_name='Preocupaciones del Paciente')),
                ('progress_notes', models.TextField(verbose_name='Notas de Progreso')),
                ('next_goals', models.TextField(blank=True, verbose_name='Objetivos para Próxima Consulta')),
                ('next_appointment', models.DateTimeField(blank=True, null=True, verbose_name='Próxima Cita')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='nutrition.nutritionalassessment')),
                ('nutritionist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_consultations', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_consultations', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Consulta Nutricional',
                'verbose_name_plural': 'Consultas Nutricionales',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Desayuno'), ('morning_snack', 'Colación Matutina'), ('lunch', 'Comida'), ('afternoon_snack', 'Colación Vespertina'), ('dinner', 'Cena')], max_length=20, verbose_name='Tipo de Comida')),
                ('day_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='Día del Plan')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del Menú')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('preparation_instructions', models.TextField(blank=True, verbose_name='Instrucciones de Preparación')),
                ('calories', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Calorías')),
                ('protein', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Proteínas (g)')),
                ('carbs', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Carbohidratos (g)')),
                ('fat', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Grasas (g)')),
                ('fiber', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Fibra (g)')),
                ('preparation_time', models.IntegerField(default=15, verbose_name='Tiempo de Preparación (minutos)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diet_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='nutrition.dietplan')),
            ],
            options={
                'verbose_name': 'Menú de Comida',
                'verbose_name_plural': 'Menús de Comidas',
                'ordering': ['day_number', 'meal_type'],
                'unique_together': {('diet_plan', 'meal_type', 'day_number')},
            },
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Alimento')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Cantidad')),
                ('unit', models.CharField(max_length=50, verbose_name='Unidad')),
                ('calories_per_serving', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Calorías por Porción')),
                ('protein_per_serving', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Proteínas por Porción (g)')),
                ('carbs_per_serving', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Carbohidratos por Porción (g)')),
                ('fat_per_serving', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Grasas por Porción (g)')),
                ('meal_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_items', to='nutrition.mealplan')),
            ],
            options={
                'verbose_name': 'Ingrediente',
                'verbose_name_plural': 'Ingredientes',
            },
        ),
        migrations.AddField(
            model_name='dietplan',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diet_plans', to='nutrition.nutritionalassessment'),
        ),
    ]
